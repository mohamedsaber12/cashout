version: "3.7"

services:

  payouts: &payouts
    container_name: PayoutsPortal
    build:
      context: .
    restart: always
    env_file:
      - ./.env
    volumes:
      - .:/app/payouts_portal
      - static_volume:/app/staticfiles/static
      - media_volume:/app/mediafiles/media
      - uwsgi_data:/tmp/uwsgi/
    ports:
      - 8000:8000
      - 3000:3000
    command: >
      sh -c "python manage.py makemigrations users &&
             python manage.py migrate users &&
             python manage.py makemigrations data &&
             python manage.py migrate data &&
             python manage.py makemigrations disbursement &&
             python manage.py migrate disbursement &&
             python manage.py makemigrations instant_cashin &&
             python manage.py migrate instant_cashin &&
             python manage.py makemigrations payment &&
             python manage.py migrate payment &&
             python manage.py makemigrations utilities &&
             python manage.py migrate utilities &&
             python manage.py makemigrations &&
             python manage.py migrate &&
             mkdocs build &&
             python manage.py collectstatic --no-input &&
             python manage.py runserver_plus 0.0.0.0:8000"
    networks:
      - payouts_network
    depends_on:
#      - postgres
      - rabbitmq

#  postgres:
#    container_name: PostgreSQL
#    image: postgres:11
#    restart: always
#    environment:
#      POSTGRES_USER: payouts_user
#      POSTGRES_DB: payouts_database
#      POSTGRES_PASSWORD: PayoutsPortalPassword
#    volumes:
#      - .:/var/lib/postgresql
#      - postgresql_volume:/var/lib/postgresql/data
#    networks:
#      - payouts_network
#    ports:
#      - "5432:5432"

  rabbitmq:
    container_name: RabbitMQ
    image: rabbitmq:3.8
    volumes:
      - rabbit_volume:/var/lib/rabbitmq
    networks:
      - payouts_network
    ports:
      - 5672:5672

  celery_worker:
    <<: *payouts
    container_name: Celery_Worker
    command: [ "celery", "worker", "--app", "payouts.settings", "--events", "--scheduler", "django", "--loglevel", "info" ]
    ports: [ ]
    networks:
      - payouts_network
    depends_on:
      - rabbitmq
    links:
      - payouts

  webserver:
    image: nginx:latest
    ports:
      - 80:80
      - 443:443
    restart: always
    volumes:
      - ./nginx/conf/:/etc/nginx/conf.d/:ro
      - ./certbot/www:/var/www/certbot/:ro
      - ./certbot/conf/:/etc/nginx/ssl/:ro
      - uwsgi_data:/tmp/uwsgi/
      - static_volume:/app/staticfiles/static:rw
      - media_volume:/app/mediafiles/media:rw
    networks:
      - payouts_network
    depends_on:
      - payouts

  certbot:
    image: certbot/certbot:latest
    volumes:
      - ./certbot/www/:/var/www/certbot/:rw
      - ./certbot/conf/:/etc/letsencrypt/:rw

volumes:
  static_volume:
  media_volume:
#  postgresql_volume:
  rabbit_volume:
  uwsgi_data:

networks:
  payouts_network:
    driver: bridge

# Use bind volumes for log files of every service
# Use bind volumes for media & static & DB
