# Generated by Django 2.2.12 on 2020-11-02 14:47

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('users', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Budget',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, null=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, null=True, verbose_name='Updated At')),
                ('current_balance', models.DecimalField(blank=True, decimal_places=2, default=0, help_text='Updated automatically after any disbursement callback or any addition from add_new_amount', max_digits=10, null=True, verbose_name='Current Balance')),
                ('total_disbursed_amount', models.DecimalField(decimal_places=2, default=0, help_text='Updated automatically after any disbursement callback', max_digits=15, verbose_name='Total Disbursed Amount')),
                ('created_by', models.ForeignKey(help_text='Super Admin who created/updated this budget values', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='budget_creator', to='users.SuperAdminUser', verbose_name='Maintainer - Super Admin')),
                ('disburser', models.OneToOneField(help_text='Before every cashin transaction, the amount to be disbursed will be validated against the current balance of the (API)-Checker owner', on_delete=django.db.models.deletion.CASCADE, related_name='budget', to='users.RootUser', verbose_name='Owner/Admin of the Disburser')),
            ],
            options={
                'verbose_name': 'Custom Budget',
                'verbose_name_plural': 'Custom Budgets',
                'ordering': ['-created_at'],
                'get_latest_by': '-updated_at',
            },
        ),
        migrations.CreateModel(
            name='CallWalletsModerator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('disbursement', models.BooleanField(default=True)),
                ('instant_disbursement', models.BooleanField(default=True)),
                ('change_profile', models.BooleanField(default=True)),
                ('set_pin', models.BooleanField(default=True)),
                ('user_inquiry', models.BooleanField(default=True)),
                ('balance_inquiry', models.BooleanField(default=True)),
                ('user_created', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='callwallets_moderator', to=settings.AUTH_USER_MODEL, verbose_name='The moderator admin')),
            ],
            options={
                'verbose_name': 'Call Wallets Moderator',
                'verbose_name_plural': 'Call Wallets Moderators',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='FeeSetup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('issuer', models.CharField(choices=[('vf', 'Vodafone'), ('es', 'Etisalat'), ('og', 'Orange'), ('am', 'Aman'), ('bc', 'Bank Card'), ('bw', 'Bank Wallet')], max_length=2, verbose_name='Issuer type')),
                ('fee_type', models.CharField(choices=[('f', 'Fixed Fee'), ('p', 'Percentage Fee'), ('m', 'Mixed Fee')], max_length=1, verbose_name='Fee type')),
                ('fixed_value', models.DecimalField(blank=True, decimal_places=2, default=0, help_text='Applied with transactions of type fixed or mixed fees', max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0')), django.core.validators.MaxValueValidator(Decimal('100.0'))], verbose_name='Fixed value')),
                ('percentage_value', models.DecimalField(blank=True, decimal_places=2, default=0, help_text='Applied with transactions of type percentage or mixed fees', max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(Decimal('100.0'))], verbose_name='Percentage value')),
                ('budget_related', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fees', to='utilities.Budget', verbose_name='Budget')),
            ],
            options={
                'verbose_name': 'Fee Setup',
                'verbose_name_plural': 'Fees Setups',
                'ordering': ['-id'],
                'get_latest_by': '-id',
                'unique_together': {('budget_related', 'issuer')},
            },
        ),
    ]
